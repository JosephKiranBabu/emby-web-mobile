define(["localassetmanager"],function(LocalAssetManager){"use strict";return function(){function reportOfflineActions(apiClient,serverInfo){return console.log("Begin reportOfflineActions"),LocalAssetManager.getOfflineActions(serverInfo.Id).then(function(actions){return actions.length?apiClient.reportOfflineActions(actions).then(function(){return LocalAssetManager.deleteOfflineActions(actions)}):Promise.resolve()})}function syncData(apiClient,serverInfo,syncUserItemAccess){console.log("Begin syncData");var deferred=DeferredBuilder.Deferred();return LocalAssetManager.getServerItemIds(serverInfo.Id).then(function(localIds){var request={TargetId:apiClient.deviceId(),LocalItemIds:localIds,OfflineUserIds:(serverInfo.Users||[]).map(function(u){return u.Id})};apiClient.syncData(request).then(function(result){afterSyncData(apiClient,serverInfo,syncUserItemAccess,result,deferred)},getOnFail(deferred))},getOnFail(deferred)),deferred.promise()}function afterSyncData(apiClient,serverInfo,enableSyncUserItemAccess,syncDataResult,deferred){console.log("Begin afterSyncData"),removeLocalItems(syncDataResult,serverInfo.Id).then(function(result){enableSyncUserItemAccess?syncUserItemAccess(syncDataResult,serverInfo.Id).then(function(){deferred.resolve()},getOnFail(deferred)):deferred.resolve()},getOnFail(deferred)),deferred.resolve()}function removeLocalItems(syncDataResult,serverId){console.log("Begin removeLocalItems");var deferred=DeferredBuilder.Deferred();return removeNextLocalItem(syncDataResult.ItemIdsToRemove,0,serverId,deferred),deferred.promise()}function removeNextLocalItem(itemIdsToRemove,index,serverId,deferred){var length=itemIdsToRemove.length;return index>=length?void deferred.resolve():void removeLocalItem(itemIdsToRemove[index],serverId).then(function(){removeNextLocalItem(itemIdsToRemove,index+1,serverId,deferred)},function(){removeNextLocalItem(itemIdsToRemove,index+1,serverId,deferred)})}function removeLocalItem(itemId,serverId){return console.log("Begin removeLocalItem"),LocalAssetManager.removeLocalItem(itemId,serverId)}function getNewMedia(apiClient,serverInfo,options){console.log("Begin getNewMedia");var deferred=DeferredBuilder.Deferred();return apiClient.getReadySyncItems(apiClient.deviceId()).then(function(jobItems){getNextNewItem(jobItems,0,apiClient,serverInfo,options,deferred)},getOnFail(deferred)),deferred.promise()}function getNextNewItem(jobItems,index,apiClient,serverInfo,options,deferred){var length=jobItems.length;if(index>=length)return void deferred.resolve();var hasGoneNext=!1,goNext=function(){hasGoneNext||(hasGoneNext=!0,getNextNewItem(jobItems,index+1,apiClient,serverInfo,options,deferred))};getNewItem(jobItems[index],apiClient,serverInfo,options).then(goNext,goNext)}function getNewItem(jobItem,apiClient,serverInfo,options){console.log("Begin getNewItem");var deferred=DeferredBuilder.Deferred(),libraryItem=jobItem.Item;return LocalAssetManager.createLocalItem(libraryItem,serverInfo,jobItem.OriginalFileName).then(function(localItem){downloadMedia(apiClient,jobItem,localItem,options).then(function(isQueued){return isQueued?void deferred.resolve():void getImages(apiClient,jobItem,localItem).then(function(){getSubtitles(apiClient,jobItem,localItem).then(function(){apiClient.reportSyncJobItemTransferred(jobItem.SyncJobItemId).then(function(){deferred.resolve()},getOnFail(deferred))},getOnFail(deferred))},getOnFail(deferred))},getOnFail(deferred))},getOnFail(deferred)),deferred.promise()}function downloadMedia(apiClient,jobItem,localItem,options){console.log("Begin downloadMedia");var deferred=DeferredBuilder.Deferred(),url=apiClient.getUrl("Sync/JobItems/"+jobItem.SyncJobItemId+"/File",{api_key:apiClient.accessToken()}),localPath=localItem.LocalPath;return console.log("Downloading media. Url: "+url+". Local path: "+localPath),options=options||{},LocalAssetManager.downloadFile(url,localPath,options.enableBackgroundTransfer,options.enableNewDownloads).then(function(path,isQueued){return isQueued?void deferred.resolveWith(null,[!0]):void LocalAssetManager.addOrUpdateLocalItem(localItem).then(function(){deferred.resolveWith(null,[!1])},getOnFail(deferred))},getOnFail(deferred)),deferred.promise()}function getImages(apiClient,jobItem,localItem){console.log("Begin getImages");var deferred=DeferredBuilder.Deferred();return getNextImage(0,apiClient,localItem,deferred),deferred.promise()}function getNextImage(index,apiClient,localItem,deferred){return console.log("Begin getNextImage"),index>=4?void deferred.resolve():void deferred.resolve()}function getSubtitles(apiClient,jobItem,localItem){console.log("Begin getSubtitles");var deferred=DeferredBuilder.Deferred();if(!jobItem.Item.MediaSources.length)return console.log("Cannot download subtitles because video has no media source info."),void deferred.resolve();var files=jobItem.AdditionalFiles.filter(function(f){return"Subtitles"===f.Type}),mediaSource=jobItem.Item.MediaSources[0];return getNextSubtitle(files,0,apiClient,jobItem,localItem,mediaSource,deferred),deferred.promise()}function getNextSubtitle(files,index,apiClient,jobItem,localItem,mediaSource,deferred){var length=files.length;return index>=length?void deferred.resolve():void getItemSubtitle(file,apiClient,jobItem,localItem,mediaSource).then(function(){getNextSubtitle(files,index+1,apiClient,jobItem,localItem,mediaSource,deferred)},function(){getNextSubtitle(files,index+1,apiClient,jobItem,localItem,mediaSource,deferred)})}function getItemSubtitle(file,apiClient,jobItem,localItem,mediaSource){console.log("Begin getItemSubtitle");var deferred=DeferredBuilder.Deferred(),subtitleStream=mediaSource.MediaStreams.filter(function(m){return"Subtitle"===m.Type&&m.Index===file.Index})[0];if(!subtitleStream)return console.log("Cannot download subtitles because matching stream info wasn't found."),void deferred.reject();var url=apiClient.getUrl("Sync/JobItems/"+jobItem.SyncJobItemId+"/AdditionalFiles",{Name:file.Name,api_key:apiClient.accessToken()});return LocalAssetManager.downloadSubtitles(url,localItem,subtitleStream).then(function(subtitlePath){subtitleStream.Path=subtitlePath,LocalAssetManager.addOrUpdateLocalItem(localItem).then(function(){deferred.resolve()},getOnFail(deferred))},getOnFail(deferred)),deferred.promise()}function syncUserItemAccess(syncDataResult,serverId){console.log("Begin syncUserItemAccess");var deferred=DeferredBuilder.Deferred(),itemIds=[];for(var id in syncDataResult.ItemUserAccess)itemIds.push(id);return syncNextUserAccessForItem(itemIds,0,syncDataResult,serverId,deferred),deferred.promise()}function syncNextUserAccessForItem(itemIds,index,syncDataResult,serverId,deferred){var length=itemIds.length;return index>=length?void deferred.resolve():void syncUserAccessForItem(itemIds[index],syncDataResult).then(function(){syncNextUserAccessForItem(itemIds,index+1,syncDataResult,serverId,deferred)},function(){syncNextUserAccessForItem(itemIds,index+1,syncDataResult,serverId,deferred)})}function syncUserAccessForItem(itemId,syncDataResult){console.log("Begin syncUserAccessForItem");var deferred=DeferredBuilder.Deferred();return LocalAssetManager.getUserIdsWithAccess(itemId,serverId).then(function(savedUserIdsWithAccess){var userIdsWithAccess=syncDataResult.ItemUserAccess[itemId];userIdsWithAccess.join(",")===savedUserIdsWithAccess.join(",")?deferred.resolve():LocalAssetManager.saveUserIdsWithAccess(itemId,serverId,userIdsWithAccess).then(function(){deferred.resolve()},getOnFail(deferred))},getOnFail(deferred)),deferred.promise()}function getOnFail(deferred){return function(){deferred.reject()}}var self=this;self.sync=function(apiClient,serverInfo,options){return reportOfflineActions(apiClient,serverInfo).then(function(){return syncData(apiClient,serverInfo,!1).then(function(){return getNewMedia(apiClient,serverInfo,options).then(function(){return syncData(apiClient,serverInfo,!1)})})})}}});